/*
*
12,345,678,901,234,567,890,123,456,789,012,345,678,901,234,567,890
12,345,678,901,234,567,890,123,456,789,012,345,678,901,234,567,890

/
1,234.567890123456789012
0.000000000000123

/
66,666,666,666,666,666,666,666.66666666
-2

-199,621,123.59575785
3,666,592,531.98173727

-5,123,456.5
4,234,559.7

2
+
1,111,111,111,111,111,111,111,111,111,111,111,111
222,222,222,222,222,222,222,222,222,222,222,222
+
-12,345,678,901,234,567,890,123,456,789,012,345,678,901,234,567,890
98,765,432,198,765,432,198,765,432,198,765,432,198,765,432,198,765
*/
#include "floatOperation.h"
int main(int argc, char const *argv[])
{
	cout << "			----		欢迎使用任意精度浮点数加减乘除计算器		----\n		    	 ----	         18计科2班叶劲亨  学号：201830582180 	       ----\n			  ----		      计算结果最多保留十位小数	  	     ----" << endl;
	while (1)
	{
		char sign;
		cout << "请输入符号(+ - * /):" << endl;
		cin >> sign;
		string a1, b1;
		printf("请输入第一个整数(每三位一组，组间用逗号隔开，例如: -5,123,456.5): ");
		cin >> a1;

		printf("请输入第一个整数(每三位一组，组间用逗号隔开): ");
		cin >> b1;
		if (sign == '*')
		{
			List result;
			result = result.mul(a1, b1);
			result.print();
		}
		else if (sign == '/')
		{
			try {
				List result;
				result = result.div(a1, b1);
				result.print();
			}
			catch (const runtime_error& e)
			{
				cout << e.what() << endl;
			}
		}
		else {
			List a, b;
			a.initializeList(a1, 1);  // 初始化链表
			b.initializeList(b1, 1);   // 初始化链表
			List result = a.solve(a, b, sign);
			result.print();
		}

	}
	return 0;
}